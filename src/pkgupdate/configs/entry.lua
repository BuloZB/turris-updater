-- Do not edit this file. It is the entry point. Edit the user.lua file.

local uci_ok, uci = pcall(require, "uci")
local disable_all = false
local branch = ""
local lists
if uci_ok then
	local cursor = uci.cursor()
	local disable = cursor:get("updater", "override", "disable")
	if disable == "true" then
		-- The user doesn't want the updater to run
		error("Updater disabled") -- TODO: Something less brutal?
	end
	branch = cursor:get("updater", "override", "branch")
	if branch then
		WARN("Branch overriden to " .. branch)
		branch = branch .. "/"
	end
	lists = cursor:get("updater", "pkglists", "lists")
else
	ERROR("UCI library is not available. Not processing user lists.")
end

-- Guess what board this is.
local base_model = ""
if model then
	if model:match("[Oo]mnia") then
		base_model = "omnia/"
	elseif model:match("[Tt]urris") then
		base_model = "turris/"
	end
end

local base_url = "https://api.turris.cz/updater-defs/" .. turris_version .. "/" .. base_model .. branch

if base_model then
	-- The distribution script. It contains the repository and bunch of basic packages. The URI is computed based on the branch and the guessed board
	Script("base",  base_url .. "base.lua", { security = "Remote", verification = "cert", ca = "file:///etc/ssl/updater.pem", crl = "file:///tmp/crl.pem" })
end

-- Some provided by the user
Script "user-src" "file:///etc/updater/user.lua" { security = "Local" }
-- Some auto-generated by command line
Script "auto-src" "file:///etc/updater/auto.lua" { security = "Local" }
-- Go through user lists and pull them in. Note that this is a temporary solution
-- with hardcoded URIs
if uci_ok then
	if type(lists) == "string" then
		lists = {lists}
	end
	if type(lists) == "table" then
		for _, l in ipairs(lists) do
			-- TODO: Make signatures work
			-- TODO: Make restricted security work
			Script("userlist-" .. l, base_url .. "userlists/" .. l .. ".lua", { security = "Remote", verification = "cert", ca = "file:///etc/ssl/updater.pem", crl = "file:///tmp/crl.pem" })
		end
	end
end
