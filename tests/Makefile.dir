
.PHONY: check-clean test valgrind luacheck check test-locks valgrind-locks

BINARIES_NOTARGET += tests/locks
locks_MODULES += locks
locks_LOCAL_LIBS += updater

$(O)/tests/check-compiled/compiled:
	mkdir -p $(O)/tests/check-compiled
	cd $(O)/tests/check-compiled && cmake $(abspath $(S))/tests/check -DHAVE_SUBUNIT=0
	+make -C $(O)/tests/check-compiled
	touch $(O)/tests/check-compiled/compiled

$(O)/tests/luacheck-compiled/bin/luacheck:
	mkdir -p $(O)/tests/luacheck-compiled
	cd $(S)/tests/luacheck && ./install.lua $(abspath $(O)/tests/luacheck-compiled)

clean: check-clean
check-clean:
	rm -rf $(O)/tests/check-compiled
	rm -rf $(O)/tests/luacheck-compiled

C_TESTS := \
	arguments \
	events \
	interpreter

LUA_TESTS := \
	backend \
	events \
	interpreter \
	journal \
	planner \
	postprocess \
	requests \
	sandbox \
	transaction \
	utils \
	uri

LUA_AUTOLOAD = $(patsubst a_%.lua,%,$(notdir $(wildcard $(S)/src/lib/autoload/a_*.lua)))
# Ignore stacktraceplus and dumper, not our creation.
LUA_AUTOLOAD := $(sort $(filter-out 01_stacktraceplus 05_dumper,$(LUA_AUTOLOAD)))

TEST_URIINTERNAL := $(abspath $(wildcard $(S)/tests/internal/*))
$(O)/.gen/tests/uriinternal.embedlist: $(S)/src/lib/gen_embed.sh $(S)/src/lib/embed_types.h $(TEST_URIINTERNAL)
	$(M) GEN $@
	$(Q) mkdir -p $(dir $@)
	$(Q)$< "" uriinternal $(S)/src/lib/embed_types.h $(TEST_URIINTERNAL) >$@

define DO_C_TEST

BINARIES_NOTARGET += tests/ctest-$(1)
ctest-$(1)_MODULES += $(1) uriinternal.embed ctest
$$(patsubst %,$(O)/.objs/tests/%.o,$$(ctest-$(1)_MODULES)): $(O)/tests/check-compiled/compiled
ctest-$(1)_SYSTEM_LIBS += check m rt
ctest-$(1)_LOCAL_LIBS += updater
$(O)/bin/ctest-$(1): EXTRA_LIBDIRS := $(O)/tests/check-compiled/src/
$(O)/bin/ctest-$(1): EXTRA_INCLUDES := $(O)/tests/check-compiled/src $(S)/tests/check/src/ $(S)/tests/check-compiled/
$(O)/bin/ctest-$(1): $(O)/tests/check-compiled/compiled

test: test-c-$(1)
valgrind: valgrind-c-$(1)
.PHONY: test-c-$(1) valgrind-c-$(1)

test-c-$(1): $(O)/bin/ctest-$(1)
	mkdir -p $(O)/testdir
	SUPPRESS_LOG=1 S=$(S) TMPDIR=$(abspath $(O)/testdir) $(O)/bin/ctest-$(1)

valgrind-c-$(1): $(O)/bin/ctest-$(1)
	mkdir -p $(O)/testdir
	CK_FORK=no SUPPRESS_LOG=1 S=$(S) TMPDIR=$(abspath $(O)/testdir) $(VALGRIND) $(O)/bin/ctest-$(1)

endef

define DO_LUA_TEST

test: test-lua-$(1)
valgrind: valgrind-lua-$(1)
.PHONY: test-lua-$(1) valgrind-lua-$(1)

test-lua-$(1): $(O)/bin/lulaunch $(S)/tests/$(1).lua
	mkdir -p $(O)/testdir
	SUPPRESS_LOG=1 S=$(S) TMPDIR=$(abspath $(O)/testdir) $(O)/bin/lulaunch $(S)/tests/$(1).lua

valgrind-lua-$(1): $(O)/bin/lulaunch $(S)/tests/$(1).lua
	mkdir -p $(O)/testdir
	SUPPRESS_LOG=1 S=$(S) TMPDIR=$(abspath $(O)/testdir) $(VALGRIND) $(O)/bin/lulaunch $(S)/tests/$(1).lua

endef

.PHONY: luac-autoload
.PHONY: luacheck
define DO_LUA_LINT

luac-autoload: luac-autoload-$(1)
.PHONY: luac-autoload-$(1)
luac-autoload-$(1): $(S)/src/lib/autoload/a_$(1).lua
	luac -p $$<

luacheck: luacheck-$(1)
.PHONY: luacheck-$(1)
luacheck-$(1): $(S)/src/lib/autoload/a_$(1).lua $(O)/tests/luacheck-compiled/bin/luacheck $(S)/tests/luacheck.config
	$(O)/tests/luacheck-compiled/bin/luacheck --config $(S)/tests/luacheck.config $$<

endef

$(eval $(foreach TEST,$(C_TESTS),$(call DO_C_TEST,$(TEST))))
$(eval $(foreach TEST,$(LUA_TESTS),$(call DO_LUA_TEST,$(TEST))))
$(eval $(foreach TEST,$(LUA_AUTOLOAD),$(call DO_LUA_LINT,$(TEST))))

test-locks: $(O)/bin/locks
	$(O)/bin/locks

valgrind-locks: $(O)/bin/locks
	$(VALGRIND) $(O)/bin/locks

test: test-locks
valgrind: valgrind-locks

.PHONY: cppcheck
define DO_STATIC_C_TEST

cppcheck: cppcheck-$(1)-$(2)

.PHONY: cppcheck-$(1)
cppcheck-$(1): cppcheck-$(1)-$(2)

.PHONY: cppcheck-$(1)-$(2)
cppcheck-$(1)-$(2): $(S)/$(3)/$(2).c
	cppcheck --inline-suppr --error-exitcode=1  $$<

endef

CPPCHECK_MODULES = src/lib/libupdater src/opkg-trans/opkg-trans src/pkgupdate/pkgupdate
# We are ignoring *.embed because those are generated and we spare them of checking.
$(eval $(foreach GROUP,$(CPPCHECK_MODULES), \
	$(foreach MOD,$(filter-out %.embed,$($(notdir $(GROUP))_MODULES)), \
		$(call DO_STATIC_C_TEST,$(notdir $(GROUP)),$(MOD),$(dir $(GROUP))) \
	) \
))

check: test valgrind luac-autoload luacheck cppcheck

include $(S)/tests/lunit-launch/Makefile.dir
include $(S)/tests/system/Makefile.dir
